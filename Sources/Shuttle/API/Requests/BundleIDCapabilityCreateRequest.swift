// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct BundleIDCapabilityCreateRequest: Encodable {
	public var data: Data

	public struct Data: Encodable {
        public let type: `Type` = .bundleIDCapabilities
		public var attributes: Attributes
		public var relationships: Relationships

		public enum `Type`: String, Encodable, CaseIterable {
			case bundleIDCapabilities = "bundleIdCapabilities"
		}

		public struct Attributes: Encodable {
			public var capabilityType: CapabilityType
			public var settings: [CapabilitySetting]?

			public init(capabilityType: CapabilityType, settings: [CapabilitySetting]? = nil) {
				self.capabilityType = capabilityType
				self.settings = settings
			}
		}

		public struct Relationships: Encodable {
			public var bundleID: BundleID

			public struct BundleID: Encodable {
				public var data: Data

				public struct Data: Encodable, Identifiable {
                    public let type: `Type` = .bundleIDs
                    public var id: Shuttle.BundleID.ID

					public enum `Type`: String, Encodable, CaseIterable {
						case bundleIDs = "bundleIds"
					}

                    public init(id: Shuttle.BundleID.ID) {
						self.id = id
					}
				}

				public init(data: Data) {
					self.data = data
				}
			}

			public init(bundleID: BundleID) {
				self.bundleID = bundleID
			}

			private enum CodingKeys: String, CodingKey {
				case bundleID = "bundleId"
			}
		}

		public init(
            attributes: Attributes,
            relationships: Relationships
        ) {
			self.attributes = attributes
			self.relationships = relationships
		}
	}

	public init(data: Data) {
		self.data = data
	}
    
    public init(
        type: CapabilityType,
        settings: [CapabilitySetting]? = nil,
        id: Shuttle.BundleID.ID
    ) {
        self.init(
            data: .init(
                attributes: .init(
                    capabilityType: type,
                    settings: settings
                ),
                relationships: .init(
                    bundleID: .init(
                        data: .init(
                            id: id
                        )
                    )
                )
            )
        )
    }
}
